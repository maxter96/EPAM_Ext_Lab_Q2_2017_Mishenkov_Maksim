@model WebApplication.Models.CreatingOrderViewModel

    @using (Html.BeginForm("EditOrder", "Home", FormMethod.Post, new { @id = "form0" }))
    {
        @Html.AntiForgeryToken()

        <div class="modal-content">
            <div class="modal-header">
                <button class="close" data-dismiss="modal" area-hidden="true">X</button>
                <h4 class="modal-title">
                    @Html.Label(Model.IsNew ? "Создать заказ" : "Изменить заказ")
                    @{  if (!Model.IsNew)
                        {
                            @Html.DisplayFor(model => model.OrderID);
                        }
                    }
                </h4>
            </div>

            <div class="modal-body">

                @Html.HiddenFor(model => model.OrderID)
                @Html.HiddenFor(model => model.IsNew)
                @Html.HiddenFor(model => model.CustomerID)
                @Html.HiddenFor(model => model.EmployeeID)

                <dl class="row">
                    <dt class="col-sm-9">
                        @Html.Label("Заказчик")
                    </dt>

                    <dd class="col-sm-12">
                        <select class="form-control" id="customerSelector">
                            @foreach (var item in ViewBag.Customers)
                            {
                                <option id=@item.CustomerID>@item.CompanyName</option>
                            }
                        </select>
                        @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
                    </dd>
                </dl>
                <dl class="row">
                    <dt class="col-sm-9">
                        @Html.Label("Продавец")
                    </dt>
                    <dd class="col-sm-12">
                        <select class="form-control" id="employeeSelector">
                            @foreach (var item in ViewBag.Employees)
                            {
                                <option id=@item.EmployeeID>@item.Name</option>
                            }
                        </select>
                        @Html.ValidationMessageFor(model => model.EmployeeID, "", new { @class = "text-danger" })
                    </dd>
                </dl>
                <dl class="row">
                    <dt class="col-sm-9">
                        @Html.LabelFor(model => model.OrderDate)
                    </dt>
                    <dd class="col-sm-12">
                        @Html.EditorFor(model => model.OrderDate, new { htmlAttributes = new { @class = "form-control", @id = "orderDate" } })
                        @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
                    </dd>
                </dl>
                <dl class="row">
                    <dt class="col-sm-9">
                        @Html.LabelFor(model => model.ShippedDate)
                    </dt>
                    <dd class="col-sm-12">
                        @Html.EditorFor(model => model.ShippedDate, new { htmlAttributes = new { @class = "form-control", @id = "shippedDate" } })
                        @Html.ValidationMessageFor(model => model.ShippedDate, "", new { @class = "text-danger" })
                    </dd>
                </dl>
                <dl class="row">
                    <dt class="col-sm-9">
                        @Html.LabelFor(model => model.RequiredDate)
                    </dt>
                    <dd class="col-sm-12">
                        @Html.EditorFor(model => model.RequiredDate, new { htmlAttributes = new { @class = "form-control", @id = "reqDate" } })
                        @Html.ValidationMessageFor(model => model.RequiredDate, "", new { @class = "text-danger" })
                    </dd>
                </dl>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Отменить</button>
                <input type="submit" class="btn btn-primary"
                       @{ if (Model.IsNew)
                          { 
                               @:value = "Создать"
                          }
                          else
                          {
                               @:value = "Изменить"
                          }
                       } 
                 />
            </div>
        </div>
    }

@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/Scripts/partialValidation.js")
@Scripts.Render("~/Scripts/switcherForEmpAndCustId.js")
@Styles.Render("~/Content/base")
@Scripts.Render("~/bundles/jqueryui")
@Scripts.Render("~/Scripts/datePicker.js")
